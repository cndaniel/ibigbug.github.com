---
layout: post
title: 前端开发人员的日常抓包
date: 2014-08-27
meta: 在 Mac 中使用 wireshark 抓取网络包
category: work
---

## 前言
作为一个前端开发工程师，了解一些 HTTP 协议是有必要的。Windows 环境下有 Fiddler 可以很方便的拦截浏览器请求进行分析，Mac 上就用大名鼎鼎的 Wirshark 好了。正好借此机会深入研究下 HTTP POST 请求到底是怎么回事

## 准备工作

1. 安装 wireshark
直接用 `brew install wireshark --with-qt` 即可。（PS：编译这个玩意儿把电脑跑得滚烫！）

2. 前端代码

{% highlight html %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title></title>
</head>
<body>
  <form action="." method="post" enctype="multipart/form-data">
    <input name="name" value="multipart" />
    <input type="file" name="image" />
    <input type="submit" value="Form Submit" />
  </form>
  <form action="." method="post">
    <input name="name" value="normal post"/>
    <input type="file" name="image" />
    <input type="submit" value="Form Submit" />
  </form>
  <button>Ajax Submit</button>
</body>
<script src="http://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"></script>
<script>
  $(function(){
    $('button').click(function(){
      $.ajax({
        url: '.',
        type: 'POST',
        data: JSON.stringify({a:1}),
        contentType: 'application/json; charset=UTF-8'
      });
    });
  });
</script>
</html>

{% endhighlight %}

3. 后端相应

Ajax 是没有办法向 `file://` 发请求的，所以可以用 python 快速搭建一个静态文件服务器：
`python2 -m SimpleHTTPServer`

## 开始

运行 `sudo wireshark-qt`。这里必须要用管理员权限运行，因为需要跟设备打交道。
